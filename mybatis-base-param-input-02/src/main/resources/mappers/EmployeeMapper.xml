<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace= "com.wang.mapper.EmployeeMapper">
        <!-- 根据员工id查询员工信息-->
        <select id="queryById" resultType="com.wang.pojo.Employee">
            select emp_id empId, emp_name empName, emp_salary empSalary
            from t_emp where emp_id = #{id}
        </select>

        <!--根据员工id删除员工信息 采用 #{参数名}的形式,相当于 ? 占位符 -->
        <delete id="deleteById">
            delete from t_emp where emp_id = #{id}
        </delete>

        <!--插入员工信息-->
        <insert id="insertEmp">
            insert into t_emp(emp_name, emp_salary) values(#{empName},#{empSalary})
        </insert>

        <!-- 根据员工姓名和工资查询员工信息
                 #{key} : key取值有两种方法
                    方法1:注解指定 @Param 指定多个简单参数的key @Param("value值")
                    方法2:mybatis默认机制
                        arg0,arg1 ...
                        param1,param2 ...
        -->
        <select id="queryByNameAndSalary" resultType="com.wang.pojo.Employee">
            select emp_id empId, emp_name empName, emp_salary empSalary from t_emp
            where emp_name = #{name} and emp_salary = #{salary}
        </select>
</mapper>